pipeline {
  agent any
  
  environment {
    TF_WORKSPACE = '/c/Teraform' //Sets the Terraform Workspace
  }
  stages {
     
    stage('Git clone') {
        steps{
            git poll: false, url: 'https://github.com/kumarRaj/stocks.git'
        }
    }
    stage('Terraform Init') {
      steps {
            withCredentials([usernamePassword(credentialsId: 'AWS_ACCESS_KEY_ID_Credential', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                sh "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} ${env.TERRAFORM_HOME}/terraform init -input=false"
            }
            
        }
      }
    stage('Terraform Plan') {
      steps {
          withCredentials([usernamePassword(credentialsId: 'AWS_ACCESS_KEY_ID_Credential', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                sh "cd deployment/ && AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} ${env.TERRAFORM_HOME}/terraform plan -out=tfplan -input=false"
            }
      }
    }
    stage('Terraform Apply') {
      steps {
        input 'Apply Plan'
        withCredentials([usernamePassword(credentialsId: 'AWS_ACCESS_KEY_ID_Credential', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                sh "cd deployment/ && AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} ${env.TERRAFORM_HOME}/terraform apply -input=false tfplan"
        }
      }
    }
  }
}